version: '2.2'

services:
  database:
    image: postgres:10.14
    container_name: ptis-tool-db
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    expose:
      - 5432
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD='ptis2021'
      - POSTGRES_HOST_AUTH_METHOD=trust
    networks:
      - app-network
  api:
    build: ./P-TIS-tool-Back-master--G8_TINGESO
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 8080 -b '0.0.0.0'"
    container_name: ptis-tool-api
    restart: always
    ports:
      - 8080:8080
    environment:
      - RAILS_ENV=production
      - DISABLE_SPRING=1
      - BUNDLE_PATH=vendor/bundle
      - VIRTUAL_HOST=api-minutas.diinf.usach.cl
      - VIRTUAL_PORT=8080
    depends_on:
      - database
    networks:
      - app-network
  tingeso:
    build: ./P-TIS-tool-Front-master--G8_TINGESO
    container_name: TINGESOFRONT
    restart: always
    ports:
      - 81:81
    environment:
      - VIRTUAL_HOST=vminutas.diinf.usach.cl
      - VIRTUAL_PORT=80
    networks:
      - app-network
    depends_on:
      - nginx-proxy
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - app-network
volumes:
  db-data:
networks:
  app-network:
    driver: bridge
